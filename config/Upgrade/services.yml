services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: true

# Upgrade
    Upgrade\:
        resource: '../../src/Upgrade/*'
        exclude:
            - '../../src/Upgrade/Application/Dto/*'
            - '../../src/Upgrade/Infrastructure/VersionControlSystem/Dto/*'

    git.adapter:
        class: Upgrade\Infrastructure\VersionControlSystem\Git\Adapter\GitAdapter

    Upgrade\Infrastructure\VersionControlSystem\Adapter\Resolver\VersionControlSystemAdapterResolver:
        class: Upgrade\Infrastructure\VersionControlSystem\Adapter\Resolver\VersionControlSystemAdapterResolver
        arguments:
            - {
                param1: '@git.adapter'
              }

    check_credentials.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckCredentialsStep

    check_is_remote_target_branch_exist.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckRemoteTargetBranchExistsStep

    check_is_local_target_branch_exist.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckLocalTargetBranchExistsStep

    check_uncommitted_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckUncommittedChangesStep

    composer_update.step:
        class: Upgrade\Application\Strategy\Composer\Step\ComposerUpdateStep

    composer_lock_diff.step:
        class: Upgrade\Application\Strategy\Common\Step\ComposerLockComparatorStep

    integrator.step:
        class: Upgrade\Application\Strategy\Common\Step\IntegratorStep

    create_branch.step:
        class: Upgrade\Application\Strategy\Common\Step\CreateBranchStep

    add_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\AddChangesStep

    commit_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\CommitChangesStep

    push_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\PushChangesStep

    create_pr.step:
        class: Upgrade\Application\Strategy\Common\Step\CreatePullRequestStep

    checkout.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckoutStep

    release_group_update.step:
        class: Upgrade\Application\Strategy\ReleaseApp\Step\ReleaseGroupUpdateStep

    composer.strategy:
        class: Upgrade\Application\Strategy\Composer\ComposerStrategy
        arguments:
            - {
                param1: '@check_credentials.step',
                param2: '@check_is_remote_target_branch_exist.step',
                param3: '@check_is_local_target_branch_exist.step',
                param4: '@check_uncommitted_changes.step',
                param5: '@composer_update.step',
                param6: '@composer_lock_diff.step',
                param7: '@integrator.step',
                param8: '@create_branch.step',
                param9: '@add_changes.step',
                param10: '@commit_changes.step',
                param11: '@push_changes.step',
                param12: '@create_pr.step',
                param13: '@checkout.step'
             }

    release-app.strategy:
        class: Upgrade\Application\Strategy\ReleaseApp\ReleaseAppStrategy
        arguments:
            - {
                param1: '@check_credentials.step',
                param2: '@check_is_remote_target_branch_exist.step',
                param3: '@check_is_local_target_branch_exist.step',
                param4: '@check_uncommitted_changes.step',
                param5: '@release_group_update.step',
                param6: '@composer_lock_diff.step',
                param7: '@integrator.step',
                param8: '@create_branch.step',
                param9: '@add_changes.step',
                param10: '@commit_changes.step',
                param11: '@push_changes.step',
                param12: '@create_pr.step',
                param13: '@checkout.step'
            }

    Upgrade\Application\Strategy\StrategyResolver:
        class: Upgrade\Application\Strategy\StrategyResolver
        arguments:
            - {
                param1: '@composer.strategy',
                param2: '@release-app.strategy'
            }

    github.provider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitHub\GitHubSourceCodeProvider

    gitlab.provider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitLab\GitLabSourceCodeProvider

    configuration.provider:
        class: Upgrade\Infrastructure\Configuration\ConfigurationProvider

    Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\SourceCodeProvider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\SourceCodeProvider
        arguments:
            - '@configuration.provider'
            - {
                param1: '@github.provider',
                param2: '@gitlab.provider'
            }

    validator.already_installed:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Package\AlreadyInstalledValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\PackageSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\PackageSoftValidator
        arguments:
            - {
                param1: '@validator.already_installed'
            }

    validator.project_changes:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroup\ProjectChangesValidator

    validator.release_major:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroup\MajorVersionValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroupSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroupSoftValidator
        arguments:
            - {
#                param1: '@validator.project_changes',
                param2: '@validator.release_major',
            }

    validator.threshold_major:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\MajorThresholdValidator

    validator.threshold_minor:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\MinorThresholdValidator

    validator.threshold_path:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\PathThresholdValidator

    validator.threshold_release_group:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\ReleaseGroupThresholdValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\ThresholdSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ThresholdSoftValidator
        arguments:
            - {
                param1: '@validator.threshold_major',
                param2: '@validator.threshold_minor',
                param3: '@validator.threshold_path',
                param4: '@validator.threshold_release_group',
            }

    processor.aggregate_release_group_processor:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\AggregateReleaseGroupProcessor

    processor.sequential_release_group_processor:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\SequentialReleaseGroupProcessor

    Upgrade\Application\Strategy\ReleaseApp\Processor\ReleaseGroupProcessorResolver:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\ReleaseGroupProcessorResolver
        arguments:
            - '@configuration.provider'
            - {
                param1: '@processor.aggregate_release_group_processor',
                param2: '@processor.sequential_release_group_processor',
            }

    #Third-party dependencies
    Ergebnis\Json\Printer\Printer: ~
    Ergebnis\Json\Printer\PrinterInterface: '@Ergebnis\Json\Printer\Printer'


