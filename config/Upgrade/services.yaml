parameters:
    report_send_endpoint_url: https://data.prod.spryker-dwh.net/upgrader
    report_send_timeout: 10
    report_send_connection_timeout: 4

    http_client.timeout_sec: 30
    http_client.repeatable.attempts: 3
    http_client.repeatable.usec_delay: 500000

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: true

# Upgrade
    Upgrade\:
        resource: '../../src/Upgrade/*'
        exclude:
            - '../../src/Upgrade/Application/Dto/*'
            - '../../src/Upgrade/Infrastructure/VersionControlSystem/Dto/*'
            - '../../src/Upgrade/Infrastructure/Report/Dto/*'

    git.adapter:
        class: Upgrade\Infrastructure\VersionControlSystem\Git\Adapter\GitAdapter

    Upgrade\Infrastructure\VersionControlSystem\Adapter\Resolver\VersionControlSystemAdapterResolver:
        class: Upgrade\Infrastructure\VersionControlSystem\Adapter\Resolver\VersionControlSystemAdapterResolver
        arguments:
            - {
                param1: '@git.adapter'
              }

    check_credentials.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckCredentialsStep

    check_is_remote_target_branch_exist.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckRemoteTargetBranchExistsStep

    check_is_local_target_branch_exist.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckLocalTargetBranchExistsStep

    check_uncommitted_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckUncommittedChangesStep

    integrator_lock_run.step:
        class: Upgrade\Application\Strategy\Common\Step\IntegratorLockStep

    composer_update.step:
        class: Upgrade\Application\Strategy\Composer\Step\ComposerUpdateStep

    composer_lock_diff.step:
        class: Upgrade\Application\Strategy\Common\Step\ComposerLockComparatorStep

    integrator.step:
        class: Upgrade\Application\Strategy\Common\Step\IntegratorStep

    create_branch.step:
        class: Upgrade\Application\Strategy\Common\Step\CreateBranchStep

    add_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\AddChangesStep

    commit_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\CommitChangesStep

    push_changes.step:
        class: Upgrade\Application\Strategy\Common\Step\PushChangesStep

    create_pr.step:
        class: Upgrade\Application\Strategy\Common\Step\CreatePullRequestStep

    checkout.step:
        class: Upgrade\Application\Strategy\Common\Step\CheckoutStep

    release_group_update.step:
        class: Upgrade\Application\Strategy\ReleaseApp\Step\ReleaseGroupUpdateStep

    generate_report_id.step:
        class: Upgrade\Application\Strategy\Common\Step\GenerateReportIdStep

    send_report.step:
        class: Upgrade\Application\Strategy\Common\Step\SendReportStep

    feature_package.fixer:
        class: Upgrade\Application\Strategy\Composer\Fixer\FeaturePackageFixerStep

    composer.strategy:
        class: Upgrade\Application\Strategy\Composer\ComposerStrategy
        arguments:
            - - '@check_credentials.step'
              - '@check_is_remote_target_branch_exist.step'
              - '@check_is_local_target_branch_exist.step'
              - '@check_uncommitted_changes.step'
              - '@integrator_lock_run.step'
              - '@composer_update.step'
              - '@composer_lock_diff.step'
              - '@integrator.step'
              - '@create_branch.step'
              - '@add_changes.step'
              - '@commit_changes.step'
              - '@push_changes.step'
              - '@generate_report_id.step'
              - '@create_pr.step'
              - '@checkout.step'
              - '@send_report.step'

            - - '@feature_package.fixer'

    release-app.strategy:
        class: Upgrade\Application\Strategy\ReleaseApp\ReleaseAppStrategy
        arguments:
            - - '@check_credentials.step'
              - '@check_is_remote_target_branch_exist.step'
              - '@check_is_local_target_branch_exist.step'
              - '@check_uncommitted_changes.step'
              - '@integrator_lock_run.step'
              - '@release_group_update.step'
              - '@composer_lock_diff.step'
              - '@integrator.step'
              - '@create_branch.step'
              - '@add_changes.step'
              - '@commit_changes.step'
              - '@push_changes.step'
              - '@generate_report_id.step'
              - '@create_pr.step'
              - '@checkout.step'
              - '@send_report.step'

            - - '@feature_package.fixer'

    Upgrade\Application\Strategy\StrategyResolver:
        class: Upgrade\Application\Strategy\StrategyResolver
        arguments:
            - {
                param1: '@composer.strategy',
                param2: '@release-app.strategy'
            }

    http.client:
        class: GuzzleHttp\Client
        arguments:
            - { timeout: '%http_client.timeout_sec%' }

    Upgrade\Infrastructure\HttpClient\RepeatableHttpClient:
        arguments:
            - '@http.client'
            - '%http_client.repeatable.attempts%'
            - '%http_client.repeatable.usec_delay%'

    Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitHub\GitHubClientFactory:
        arguments:
            - '@configuration.provider'
            - '@Upgrade\Infrastructure\HttpClient\RepeatableHttpClient'

    Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitLab\GitLabClientFactory:
        arguments:
            - '@configuration.provider'
            - '@Upgrade\Infrastructure\HttpClient\RepeatableHttpClient'

    github.provider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitHub\GitHubSourceCodeProvider

    gitlab.provider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\GitLab\GitLabSourceCodeProvider

    configuration.provider:
        class: Upgrade\Infrastructure\Configuration\ConfigurationProvider

    Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\SourceCodeProvider:
        class: Upgrade\Infrastructure\VersionControlSystem\SourceCodeProvider\SourceCodeProvider
        arguments:
            - '@configuration.provider'
            - {
                param1: '@github.provider',
                param2: '@gitlab.provider'
            }

    validator.already_installed:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Package\AlreadyInstalledValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\PackageSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\PackageSoftValidator
        arguments:
            - {
                param1: '@validator.already_installed'
            }

    validator.project_changes:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroup\ProjectChangesValidator

    validator.release_major:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroup\MajorVersionValidator

    validator.conflict:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroup\ConflictValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroupSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ReleaseGroupSoftValidator
        arguments:
            - {
#                param1: '@validator.project_changes',
                param2: '@validator.release_major',
                param3: '@validator.conflict',
            }

    validator.threshold_major:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\MajorThresholdValidator

    validator.threshold_minor:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\MinorThresholdValidator

    validator.threshold_path:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\PathThresholdValidator

    validator.threshold_release_group:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\Threshold\ReleaseGroupThresholdValidator

    Upgrade\Application\Strategy\ReleaseApp\Validator\ThresholdSoftValidator:
        class: Upgrade\Application\Strategy\ReleaseApp\Validator\ThresholdSoftValidator
        arguments:
            - {
                param1: '@validator.threshold_major',
                param2: '@validator.threshold_minor',
                param3: '@validator.threshold_path',
                param4: '@validator.threshold_release_group',
            }

    processor.aggregate_release_group_processor:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\AggregateReleaseGroupProcessor

    processor.sequential_release_group_processor:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\SequentialReleaseGroupProcessor

    Upgrade\Application\Strategy\ReleaseApp\Processor\ReleaseGroupProcessorResolver:
        class: Upgrade\Application\Strategy\ReleaseApp\Processor\ReleaseGroupProcessorResolver
        arguments:
            - '@configuration.provider'
            - {
                param1: '@processor.aggregate_release_group_processor',
                param2: '@processor.sequential_release_group_processor',
            }

    #Third-party dependencies
    Ergebnis\Json\Printer\Printer: ~
    Ergebnis\Json\Printer\PrinterInterface: '@Ergebnis\Json\Printer\Printer'

    #Report
    GuzzleHttp\Client:

    serializer.json_encoder:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder

    report.serializer:
        class: Symfony\Component\Serializer\Serializer
        arguments:
            - [ '@Upgrade\Infrastructure\Report\Serializer\Normalizer\ReportNormalizer' ]
            - [ "@serializer.json_encoder" ]

    Upgrade\Infrastructure\Report\Sender\RemoteEndpointJsonReportSender:
        arguments:
            - '@GuzzleHttp\Client'
            - '@report.serializer'
            - '@configuration.provider'
            - '%report_send_endpoint_url%'
            - '%report_send_timeout%'
            - '%report_send_connection_timeout%'

